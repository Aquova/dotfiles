// Austin Bricker VSCode Settings
// 2018-2020
{
    // Requires the "Settings Cycler" extension
    "editor.lineNumbers": "on",
    "settings.cycle": [
        {
            "id": "lineNumber",
            "overrideWorkspaceSettings": false,
            "values": [
                { "editor.lineNumbers": "relative" },
                { "editor.lineNumbers": "on" }
            ]
        }
    ],

    // Vim settings
    "vim.easymotion": true,                                             // EasyMotion behavior enabled
    "vim.hlsearch": true,                                               // Highlighted Search enabled
    "vim.visualstar": true,                                             // * toggles search
    "vim.leader": ",",                                                  // Set leader to ,
    "vim.highlightedyank.enable": true,                                 // Highlighted Yank enabled
    "vim.highlightedyank.duration": 500,                                // Highlight yank for 500 ms
    "vim.cursorStylePerMode.normal": "block",                           // Use block cursor style for normal mode
    "vim.cursorStylePerMode.insert": "line",                            // Use line cursor style for insert mode
    "vim.cursorStylePerMode.replace": "underline",                      // Use underline cursor sytle for replace mode
    "vim.statusBarColorControl": false,                                 // Custom colors tend to lag system, but here are the ones I used to use
    "vim.statusBarColors.normal":"#98c379",
    "vim.statusBarColors.insert":"#61afef",
    "vim.statusBarColors.visual":"#c678dd",
    "vim.statusBarColors.visualline":"#c678dd",
    "vim.statusBarColors.visualblock":"#c678dd",
    "vim.statusBarColors.replace":"#e06c75",

    // Vim Keybindings
    // Insert mode
    "vim.insertModeKeyBindings": [
        // jk is escape
        { "before":["j", "k"], "after":["<Esc>"] }
    ],
    // Visual mode
    "vim.visualModeKeyBindingsNonRecursive": [
        // Remaps beginning/end of line
        { "before": ["B"],                  "after": ["^"] },
        { "before": ["E"],                  "after": ["$"] },
        // Move vertically by visual line, not literal line
        { "before": ["j"],                  "after": ["g", "j"] },
        { "before": ["k"],                  "after": ["g", "k"] },
        // Center text after jumping half-screen
        { "before": ["L"],                  "after": ["L", "z", "z"] },
        { "before": ["H"],                  "after": ["H", "z", "z"] },
        // Center text after jumping to functions
        { "before": ["[", "["],             "after": ["[", "[", "z", "z"] },
        { "before": ["]", "]"],             "after": ["]", "]", "z", "z"] },
        { "before": ["[", "]"],             "after": ["[", "]", "z", "z"] },
        { "before": ["]", "["],             "after": ["]", "[", "z", "z"] },
    ],
    // Normal mode
    "vim.normalModeKeyBindingsNonRecursive": [
        // Remaps beginning/end of line
        { "before": ["B"],                  "after": ["^"] },
        { "before": ["E"],                  "after": ["$"] },
        // Move vertically by visual line, not literal line
        { "before": ["j"],                  "after": ["g", "j"] },
        { "before": ["k"],                  "after": ["g", "k"] },
        // Center text after jumping half-screen
        { "before": ["L"],                  "after": ["L", "z", "z"] },
        { "before": ["H"],                  "after": ["H", "z", "z"] },
        // Use tab to jump between matching ([{}])
        { "before": ["<tab>"],              "after": ["%"] },
        // Set Y to yank to end of line
        { "before": ["Y"],                  "after": ["y", "$"] },
        // Center text after jumping to functions
        { "before": ["[", "["],             "after": ["[", "[", "z", "z"] },
        { "before": ["]", "]"],             "after": ["]", "]", "z", "z"] },
        { "before": ["[", "]"],             "after": ["[", "]", "z", "z"] },
        { "before": ["]", "["],             "after": ["]", "[", "z", "z"] },
        // Toggle folding with space
        { "before": ["<space>"],            "after": ["z", "a"] },

        // A 'bug' in VSCode Vim doesn't mark files as clean after using u for undo. This fixes that behavior.
        // If this is ever resolved, delete
        { "before": ["u"],                  "commands": [ "undo" ] },
        { "before": ["<C-r>"],              "commands": [ "redo" ] },
        // ,bd closes current file
        { "before": ["<leader>", "b", "d"], "commands": [ "workbench.action.closeActiveEditor" ] },
        // [c / ]c jumps between
        { "before": ["[", "c"],             "commands": [ "workbench.action.editor.previousChange" ] },
        { "before": ["]", "c"],             "commands": [ "workbench.action.editor.nextChange" ] },
        // [p / ]p jumps between breakpoints
        { "before": ["[", "p"],             "commands": [ "editor.debug.action.goToPreviousBreakpoint" ] },
        { "before": ["]", "p"],             "commands": [ "editor.debug.action.goToNextBreakpoint" ] },
        // J/K changes tabs
        { "before": ["J"],                  "commands": [ "workbench.action.previousEditor" ] },
        { "before": ["K"],                  "commands": [ "workbench.action.nextEditor" ] },
        // Replace typing :noh
        { "before": ["<leader>", "<space>"], "commands": [ ":noh" ] },
        // [<space> / ]<space> inserts blank line before/after cursor
        { "before": ["[", "<space>"],       "commands": [ "editor.action.insertLineBefore" ] },
        { "before": ["]", "<space>"],       "commands": [ "editor.action.insertLineAfter" ] },
        // gr toggles relative line numbers (requires Settings Cycler)
        { "before": ["g", "r"],             "commands": [ "settings.cycle.lineNumber" ] },
        // gp toggles breakpoint
        { "before": ["g", "p"],             "commands": [ "editor.debug.action.toggleBreakpoint" ] },
        // gP toggles conditional breakpoint
        { "before": ["g", "P"],             "commands": [ "editor.debug.action.conditionalBreakpoint" ] },
        // gm opens Markdown preview
        { "before": ["g", "m"],             "commands": [ "markdown.showPreviewToSide" ] },
        // gs toggles sidebar
        { "before": ["g", "s"],             "commands": [ "workbench.action.toggleSidebarVisibility" ] },

        // Display different sidebars with ,s and other key
        // Explorer
        { "before": ["<leader>", "s", "e"], "commands": [ "workbench.view.explorer", "workbench.action.focusActiveEditorGroup" ] },
        // Find
        { "before": ["<leader>", "s", "f"], "commands": [ "workbench.view.search", "workbench.action.focusActiveEditorGroup" ] },
        // Git
        { "before": ["<leader>", "s", "g"], "commands": [ "workbench.view.scm", "workbench.action.focusActiveEditorGroup" ] },
        // Debug
        { "before": ["<leader>", "s", "d"], "commands": [ "workbench.view.debug", "workbench.action.focusActiveEditorGroup" ] },
        // Extensions
        { "before": ["<leader>", "s", "x"], "commands": [ "workbench.view.extensions", "workbench.action.focusActiveEditorGroup" ] },
    ],

    // General settings
    "files.insertFinalNewline": true,
    "files.trimTrailingWhitespace": true,
    "breadcrumbs.enabled": true,
    "debug.allowBreakpointsEverywhere": true,
    "editor.wordWrap":"on",
    "editor.minimap.enabled": false,
    "editor.occurrencesHighlight": false,
    "editor.selectionHighlight": false,
    "editor.parameterHints.enabled": false,
    "editor.cursorBlinking": "phase",
    "workbench.editor.enablePreview": false,
    "window.titleBarStyle": "custom",
    "workbench.colorCustomizations": {
        "statusBar.foreground": "#ffffff",
    },
    "explorer.confirmDragAndDrop": false,
    "explorer.confirmDelete": false,
    "editor.acceptSuggestionOnCommitCharacter": false,
    "workbench.startupEditor": "none",
    "explorer.autoReveal": false,
    "search.useIgnoreFiles": false,

    "gitlens.advanced.telemetry.enabled": false,
    "gitlens.currentLine.format": "${author}, ${agoOrDate}",
    "workbench.iconTheme": "material-icon-theme",
    "material-icon-theme.files.associations": {
        "*.p8": "lua",
        "*.vim": "vim"
    },
    "material-icon-theme.folders.color": "#42a5f5",
    "material-icon-theme.activeIconPack": "angular",
    "workbench.colorTheme": "One Dark Pro",
    "extensions.ignoreRecommendations": true,
    "window.zoomLevel": 0,
    "workbench.sideBar.location": "left",
}
