// Austin Bricker VSCode Settings

{
    // General settings
    "files.insertFinalNewline": true,
    "files.trimTrailingWhitespace": true,
    "breadcrumbs.enabled": true,
    "debug.allowBreakpointsEverywhere": true,
    "editor.wordWrap":"on",
    "editor.minimap.enabled": false,
    "editor.occurrencesHighlight": false,
    "editor.selectionHighlight": false,
    "editor.parameterHints.enabled": false,
    "editor.cursorBlinking": "phase",
    "workbench.editor.enablePreview": false,
    "window.titleBarStyle": "custom",
    "workbench.colorCustomizations": {
        "statusBar.foreground": "#fff",
    },
    "explorer.confirmDragAndDrop": false,
    "explorer.confirmDelete": false,
    "editor.acceptSuggestionOnCommitCharacter": false,
    "workbench.startupEditor": "none",
    "explorer.autoReveal": false,

    // Requires the "Settings Cycler" extension
    "editor.lineNumbers": "on",
    "settings.cycle": [
        {
            "id": "lineNumber",
            "overrideWorkspaceSettings": false,
            "values": [
                { "editor.lineNumbers": "relative" },
                { "editor.lineNumbers": "on" }
            ]
        }
    ],

    // Vim settings
    "vim.easymotion": true,                                             // EasyMotion behavior enabled
    "vim.hlsearch": true,                                               // Highlighted Search enabled
    "vim.visualstar": true,                                             // * toggles search
    "vim.leader": ",",                                                  // Set leader to ,
    "vim.highlightedyank.enable": true,                                 // Highlighted Yank enabled
    "vim.highlightedyank.duration": 500,
    "vim.cursorStylePerMode.normal": "block",
    "vim.cursorStylePerMode.insert": "line",
    "vim.cursorStylePerMode.replace": "underline",
    "vim.statusBarColorControl": false,
    "vim.statusBarColors.normal":"#98c379",
    "vim.statusBarColors.insert":"#61afef",
    "vim.statusBarColors.visual":"#c678dd",
    "vim.statusBarColors.visualline":"#c678dd",
    "vim.statusBarColors.visualblock":"#c678dd",
    "vim.statusBarColors.replace":"#e06c75",

    // Vim Keybindings
    // Insert mode
    "vim.insertModeKeyBindings": [
        // jk is escape
        { "before":["j", "k"], "after":["<Esc>"] }
    ],
    // Visual mode
    "vim.visualModeKeyBindingsNonRecursive": [
        // Remaps beginning/end of line
        { "before": ["B"], "after": ["^"] },
        { "before": ["E"], "after": ["$"] },
        // Center text after jumping half-screen
        { "before": ["L"], "after": ["L", "z", "z"] },
        { "before": ["H"], "after": ["H", "z", "z"] },
        // Center text after jumping to functions
        { "before": ["[", "["], "after": ["[", "[", "z", "z"] },
        { "before": ["]", "]"], "after": ["]", "]", "z", "z"] },
        { "before": ["[", "]"], "after": ["[", "]", "z", "z"] },
        { "before": ["]", "["], "after": ["]", "[", "z", "z"] },
    ],
    // Normal mode
    "vim.normalModeKeyBindingsNonRecursive": [
        // Remaps beginning/end of line
        { "before": ["B"], "after": ["^"] },
        { "before": ["E"], "after": ["$"] },
        // Move vertically by visual line, not literal line
        { "before": ["j"], "after": ["g", "j"] },
        { "before": ["k"], "after": ["g", "k"] },
        // Center text after jumping half-screen
        { "before": ["L"], "after": ["L", "z", "z"] },
        { "before": ["H"], "after": ["H", "z", "z"] },
        // Tab is %
        { "before": ["<tab>"], "after": ["%"] },
        // Set Y to be the same as y$
        { "before": ["Y"], "after": ["y", "$"] },
        // Center text after jumping to functions
        { "before": ["[", "["], "after": ["[", "[", "z", "z"] },
        { "before": ["]", "]"], "after": ["]", "]", "z", "z"] },
        { "before": ["[", "]"], "after": ["[", "]", "z", "z"] },
        { "before": ["]", "["], "after": ["]", "[", "z", "z"] },

        // Toggle folding with space
        // TODO: Replace this with Space is za once VSCode Vim implements it
        { "before": ["<space>"], "after": [], "commands": [ { "command": "editor.toggleFold", "args": [] } ] },
        // ,bd closes current file
        { "before": ["<leader>", "b", "d"], "after": [], "commands": [ { "command": "workbench.action.closeActiveEditor", "args": [] } ] },
        // [c / ]c jumps between
        { "before": ["[", "c"], "after": [], "commands": [ { "command": "workbench.action.editor.previousChange", "args": [] } ] },
        { "before": ["]", "c"], "after": [], "commands": [ { "command": "workbench.action.editor.nextChange", "args": [] } ] },
        // [p / ]p jumps between breakpoints
        { "before": ["[", "p"], "after": [], "commands": [ { "command": "editor.debug.action.goToPreviousBreakpoint", "args": [] } ] },
        { "before": ["]", "p"], "after": [], "commands": [ { "command": "editor.debug.action.goToNextBreakpoint", "args": [] } ] },
        // J/K changes tabs
        { "before": ["J"], "after": [], "commands": [ { "command": "workbench.action.previousEditor", "args": [] } ] },
        { "before": ["K"], "after": [], "commands": [ { "command": "workbench.action.nextEditor", "args": [] } ] },
        // Replace typing :noh
        { "before": ["<leader>", "<space>"], "after": [], "commands": [ { "command": ":noh", "args": [] } ] },

        // gr toggles relative line numbers (requires Settings Cycler)
        { "before": ["g", "r"], "after": [], "commands": [ { "command": "settings.cycle.lineNumber", "args": [] } ] },
        // gp toggles breakpoint
        { "before": ["g", "p"], "after": [], "commands": [ { "command": "editor.debug.action.toggleBreakpoint", "args": [] } ] },
        // gP toggles conditional breakpoint
        { "before": ["g", "P"], "after": [], "commands": [ { "command": "editor.debug.action.conditionalBreakpoint", "args": [] } ] },
        // gm opens Markdown preview
        { "before": ["g", "m"], "after": [], "commands": [ { "command": "markdown.showPreviewToSide", "args": [] } ] },
        // gs toggles sidebar
        { "before": ["g", "s"], "after": [], "commands": [ { "command": "workbench.action.toggleSidebarVisibility", "args": [] } ] },
    ],

    // Other extension settings
    "gitlens.advanced.telemetry.enabled": false,
    "gitlens.currentLine.format": "${author}, ${agoOrDate}",
    "workbench.iconTheme": "material-icon-theme",
    "material-icon-theme.files.associations": {
        "*.moon": "lua",
        "*.p8": "lua"
    },
    "material-icon-theme.folders.color": "#42a5f5",
    "material-icon-theme.activeIconPack": "angular",
    "workbench.colorTheme": "One Dark Pro",
    "extensions.ignoreRecommendations": true,
    "window.zoomLevel": 0,
}
